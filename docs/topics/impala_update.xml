<?xml version="1.0" encoding="UTF-8"?>
<!--
Licensed to the Apache Software Foundation (ASF) under one
or more contributor license agreements.  See the NOTICE file
distributed with this work for additional information
regarding copyright ownership.  The ASF licenses this file
to you under the Apache License, Version 2.0 (the
"License"); you may not use this file except in compliance
with the License.  You may obtain a copy of the License at

  http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing,
software distributed under the License is distributed on an
"AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, either express or implied.  See the License for the
specific language governing permissions and limitations
under the License.
-->
<!DOCTYPE concept PUBLIC "-//OASIS//DTD DITA Concept//EN" "concept.dtd">
<concept id="update">

  <title>UPDATE Statement (<keyword keyref="impala28"/> or higher only)</title>
  <titlealts audience="PDF"><navtitle>UPDATE</navtitle></titlealts>
  <prolog>
    <metadata>
      <data name="Category" value="Impala"/>
      <data name="Category" value="SQL"/>
      <data name="Category" value="Kudu"/>
      <data name="Category" value="ETL"/>
      <data name="Category" value="Ingest"/>
      <data name="Category" value="DML"/>
      <data name="Category" value="Developers"/>
      <data name="Category" value="Data Analysts"/>
    </metadata>
  </prolog>

  <conbody>

    <p>
      <indexterm audience="Cloudera">UPDATE statement</indexterm>
      Updates one or more rows from a Kudu table.
      Although updating a single row or a range of rows would be inefficient for tables using HDFS
      data files, Kudu is able to perform this operation efficiently. Therefore, this statement
      only works for Impala tables that use the Kudu storage engine.
    </p>

    <p conref="../shared/impala_common.xml#common/syntax_blurb"/>

<codeblock>
</codeblock>

    <p rev="kudu">
      Normally, an <codeph>UPDATE</codeph> operation for a Kudu table fails if
      some partition key columns are not found, due to their being deleted or changed
      by a concurrent <codeph>UPDATE</codeph> or <codeph>DELETE</codeph> operation.
      Specify <codeph>UPDATE IGNORE <varname>rest_of_statement</varname></codeph> to
      make the <codeph>UPDATE</codeph> continue in this case. The rows with the nonexistent
      duplicate partition key column values are not changed.
    </p>

    <p conref="../shared/impala_common.xml#common/dml_blurb"/>

    <p conref="../shared/impala_common.xml#common/usage_notes_blurb"/>

    <p conref="../shared/impala_common.xml#common/sync_ddl_blurb"/>

    <note conref="../shared/impala_common.xml#common/compute_stats_next"/>

    <p conref="../shared/impala_common.xml#common/example_blurb"/>
<codeblock>

</codeblock>

    <p conref="../shared/impala_common.xml#common/related_info"/>

    <p>
      <xref href="impala_kudu.xml#impala_kudu"/>
    </p>

  </conbody>

</concept>
